/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    texturedMesh001_1: THREE.Mesh
    texturedMesh001_2: THREE.Mesh
    texturedMesh001_3: THREE.Mesh
    texturedMesh001_4: THREE.Mesh
    texturedMesh001_5: THREE.Mesh
  }
  materials: {
    ['TextureAtlas_0.001']: THREE.MeshStandardMaterial
    ['TextureAtlas_1.001']: THREE.MeshStandardMaterial
    ['Material.006']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/Augen-transformed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-0.38, 3.79, -0.21]} rotation={[-1.89, -0.12, 0.25]} scale={[12.5, 12.5, 12.5]}>
        <mesh geometry={nodes.texturedMesh001_1.geometry} material={materials['TextureAtlas_0.001']} />
        <mesh geometry={nodes.texturedMesh001_2.geometry} material={materials['TextureAtlas_1.001']} />
        <mesh geometry={nodes.texturedMesh001_3.geometry} material={materials['Material.006']} />
        <mesh geometry={nodes.texturedMesh001_4.geometry} material={materials['Material.004']} />
        <mesh geometry={nodes.texturedMesh001_5.geometry} material={materials['Material.005']} />
      </group>
    </group>
  )
}

useGLTF.preload('/Augen-transformed.glb')
